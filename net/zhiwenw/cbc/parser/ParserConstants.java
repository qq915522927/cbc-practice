/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VOID = 1;
  /** RegularExpression Id. */
  int CHAR = 2;
  /** RegularExpression Id. */
  int SHORT = 3;
  /** RegularExpression Id. */
  int INT = 4;
  /** RegularExpression Id. */
  int LONG = 5;
  /** RegularExpression Id. */
  int STRUCT = 6;
  /** RegularExpression Id. */
  int UNION = 7;
  /** RegularExpression Id. */
  int ENUM = 8;
  /** RegularExpression Id. */
  int STATIC = 9;
  /** RegularExpression Id. */
  int EXTERN = 10;
  /** RegularExpression Id. */
  int CONST = 11;
  /** RegularExpression Id. */
  int SIGNED = 12;
  /** RegularExpression Id. */
  int UNSIGNED = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int ELSE = 15;
  /** RegularExpression Id. */
  int SWITCH = 16;
  /** RegularExpression Id. */
  int CASE = 17;
  /** RegularExpression Id. */
  int DEFAULT_ = 18;
  /** RegularExpression Id. */
  int WHILE = 19;
  /** RegularExpression Id. */
  int DO = 20;
  /** RegularExpression Id. */
  int FOR = 21;
  /** RegularExpression Id. */
  int RETURN = 22;
  /** RegularExpression Id. */
  int BREAK = 23;
  /** RegularExpression Id. */
  int CONTINUE = 24;
  /** RegularExpression Id. */
  int GOTO = 25;
  /** RegularExpression Id. */
  int TYPEDEF = 26;
  /** RegularExpression Id. */
  int IMPORT = 27;
  /** RegularExpression Id. */
  int SIZEOF = 28;
  /** RegularExpression Id. */
  int IDENTIFIER = 29;
  /** RegularExpression Id. */
  int INTEGER = 30;
  /** RegularExpression Id. */
  int CHARACTER = 35;
  /** RegularExpression Id. */
  int STRING = 40;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_CHARACTER = 1;
  /** Lexical state. */
  int CHARACTER_TERM = 2;
  /** Lexical state. */
  int IN_STRING = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"void\"",
    "\"char\"",
    "\"short\"",
    "\"int\"",
    "\"long\"",
    "\"struct\"",
    "\"union\"",
    "\"enum\"",
    "\"static\"",
    "\"extern\"",
    "\"const\"",
    "\"signed\"",
    "\"unsigned\"",
    "\"if\"",
    "\"else\"",
    "\"switch\"",
    "\"case\"",
    "\"default\"",
    "\"while\"",
    "\"do\"",
    "\"for\"",
    "\"return\"",
    "\"break\"",
    "\"continue\"",
    "\"goto\"",
    "\"typedef\"",
    "\"import\"",
    "\"sizeof\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "\"\\\'\"",
    "<token of kind 32>",
    "<token of kind 33>",
    "<token of kind 34>",
    "\"\\\'\"",
    "\"\\\"\"",
    "<token of kind 37>",
    "<token of kind 38>",
    "<token of kind 39>",
    "\"\\\"\"",
  };

}
