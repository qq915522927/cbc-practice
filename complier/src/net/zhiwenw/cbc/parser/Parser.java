/* Generated By:JavaCC: Do not edit this line. Parser.java */
package net.zhiwenw.cbc.parser;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;

public class Parser implements ParserConstants {

   private boolean isType(String name) {
        return false;
    }

// Grammar
  final public void compliation_unit() throws ParseException {
    trace_call("compliation_unit");
    try {
      import_stmts();
      top_defs();
      jj_consume_token(0);
    } finally {
      trace_return("compliation_unit");
    }
  }

  final public void import_stmts() throws ParseException {
    trace_call("import_stmts");
    try {
      label_1:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case IMPORT:
          ;
          break;
        default:
          jj_la1[0] = jj_gen;
          break label_1;
        }
        import_stmt();
      }
    } finally {
      trace_return("import_stmts");
    }
  }

  final public void import_stmt() throws ParseException {
    trace_call("import_stmt");
    try {
      jj_consume_token(IMPORT);
      name();
      label_2:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 46:
          ;
          break;
        default:
          jj_la1[1] = jj_gen;
          break label_2;
        }
        jj_consume_token(46);
        name();
      }
      jj_consume_token(47);
    } finally {
      trace_return("import_stmt");
    }
  }

  final public void top_defs() throws ParseException {
    trace_call("top_defs");
    try {
      label_3:
      while (true) {
        if (jj_2_1(1)) {
          ;
        } else {
          break label_3;
        }
        if (jj_2_2(2147483647)) {
          defun();
        } else if (jj_2_3(3)) {
          defvars();
        } else {
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case CONST:
            defconst();
            break;
          case STRUCT:
            defstruct();
            break;
          case UNION:
            defunion();
            break;
          case TYPEDEF:
            typedef();
            break;
          default:
            jj_la1[2] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
      }
    } finally {
      trace_return("top_defs");
    }
  }

  final public void defvars() throws ParseException {
    trace_call("defvars");
    try {
      storage();
      type();
      name();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 49:
        jj_consume_token(49);
        expr();
        break;
      default:
        jj_la1[3] = jj_gen;
        ;
      }
      label_4:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 50:
          ;
          break;
        default:
          jj_la1[4] = jj_gen;
          break label_4;
        }
        jj_consume_token(50);
        name();
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 49:
          jj_consume_token(49);
          expr();
          break;
        default:
          jj_la1[5] = jj_gen;
          ;
        }
      }
      jj_consume_token(47);
    } finally {
      trace_return("defvars");
    }
  }

  final public void defconst() throws ParseException {
    trace_call("defconst");
    try {
      jj_consume_token(CONST);
      type();
      name();
      jj_consume_token(49);
      expr();
      jj_consume_token(47);
    } finally {
      trace_return("defconst");
    }
  }

  final public void defun() throws ParseException {
    trace_call("defun");
    try {
      storage();
      type();
      name();
      jj_consume_token(48);
      params();
      jj_consume_token(51);
      block();
    } finally {
      trace_return("defun");
    }
  }

  final public void storage() throws ParseException {
    trace_call("storage");
    try {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case STATIC:
        jj_consume_token(STATIC);
        break;
      default:
        jj_la1[6] = jj_gen;
        ;
      }
    } finally {
      trace_return("storage");
    }
  }

  final public void params() throws ParseException {
    trace_call("params");
    try {
      if (jj_2_4(2147483647)) {
        jj_consume_token(VOID);
      } else if (jj_2_5(1)) {
        fixedparams();
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 50:
          jj_consume_token(50);
          jj_consume_token(52);
          break;
        default:
          jj_la1[7] = jj_gen;
          ;
        }
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } finally {
      trace_return("params");
    }
  }

  final public void fixedparams() throws ParseException {
    trace_call("fixedparams");
    try {
      param();
      label_5:
      while (true) {
        if (jj_2_6(2)) {
          ;
        } else {
          break label_5;
        }
        jj_consume_token(50);
        param();
      }
    } finally {
      trace_return("fixedparams");
    }
  }

  final public void param() throws ParseException {
    trace_call("param");
    try {
      type();
      name();
    } finally {
      trace_return("param");
    }
  }

  final public void block() throws ParseException {
    trace_call("block");
    try {
      jj_consume_token(53);
      defvar_list();
      stmts();
      jj_consume_token(54);
    } finally {
      trace_return("block");
    }
  }

  final public void defvar_list() throws ParseException {
    trace_call("defvar_list");
    try {
      label_6:
      while (true) {
        if (jj_2_7(1)) {
          ;
        } else {
          break label_6;
        }
        defvars();
      }
    } finally {
      trace_return("defvar_list");
    }
  }

  final public void defstruct() throws ParseException {
    trace_call("defstruct");
    try {
      jj_consume_token(STRUCT);
      name();
      member_list();
      jj_consume_token(47);
    } finally {
      trace_return("defstruct");
    }
  }

  final public void defunion() throws ParseException {
    trace_call("defunion");
    try {
      jj_consume_token(UNION);
      name();
      member_list();
      jj_consume_token(47);
    } finally {
      trace_return("defunion");
    }
  }

  final public void member_list() throws ParseException {
    trace_call("member_list");
    try {
      jj_consume_token(53);
      label_7:
      while (true) {
        if (jj_2_8(1)) {
          ;
        } else {
          break label_7;
        }
        slot();
        jj_consume_token(47);
      }
      jj_consume_token(54);
    } finally {
      trace_return("member_list");
    }
  }

  final public void slot() throws ParseException {
    trace_call("slot");
    try {
      type();
      name();
    } finally {
      trace_return("slot");
    }
  }

  final public void funcdecl() throws ParseException {
    trace_call("funcdecl");
    try {
      jj_consume_token(EXTERN);
      typeref();
      name();
      jj_consume_token(48);
      params();
      jj_consume_token(51);
      jj_consume_token(47);
    } finally {
      trace_return("funcdecl");
    }
  }

  final public void vardecl() throws ParseException {
    trace_call("vardecl");
    try {
      jj_consume_token(EXTERN);
      type();
      name();
      jj_consume_token(47);
    } finally {
      trace_return("vardecl");
    }
  }

  final public void type() throws ParseException {
    trace_call("type");
    try {
      typeref();
    } finally {
      trace_return("type");
    }
  }

  final public void typeref() throws ParseException {
    trace_call("typeref");
    try {
      typeref_base();
      label_8:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 48:
        case 55:
        case 57:
          ;
          break;
        default:
          jj_la1[8] = jj_gen;
          break label_8;
        }
        if (jj_2_9(2)) {
          jj_consume_token(55);
          jj_consume_token(56);
        } else {
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case 55:
            jj_consume_token(55);
            jj_consume_token(INTEGER);
            jj_consume_token(56);
            break;
          case 57:
            jj_consume_token(57);
            break;
          case 48:
            jj_consume_token(48);
            param_typerefs();
            jj_consume_token(51);
            break;
          default:
            jj_la1[9] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
      }
    } finally {
      trace_return("typeref");
    }
  }

  final public void param_typerefs() throws ParseException {
    trace_call("param_typerefs");
    try {
      if (jj_2_10(2147483647)) {
        jj_consume_token(VOID);
      } else if (jj_2_11(1)) {
        fixedparam_typerefs();
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 50:
          jj_consume_token(50);
          jj_consume_token(52);
          break;
        default:
          jj_la1[10] = jj_gen;
          ;
        }
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    } finally {
      trace_return("param_typerefs");
    }
  }

  final public void fixedparam_typerefs() throws ParseException {
    trace_call("fixedparam_typerefs");
    try {
      typeref();
      label_9:
      while (true) {
        if (jj_2_12(2)) {
          ;
        } else {
          break label_9;
        }
        jj_consume_token(50);
        typeref();
      }
    } finally {
      trace_return("fixedparam_typerefs");
    }
  }

  final public void typeref_base() throws ParseException {
    trace_call("typeref_base");
    try {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case VOID:
        jj_consume_token(VOID);
        break;
      case CHAR:
        jj_consume_token(CHAR);
        break;
      case SHORT:
        jj_consume_token(SHORT);
        break;
      case INT:
        jj_consume_token(INT);
        break;
      case LONG:
        jj_consume_token(LONG);
        break;
      default:
        jj_la1[11] = jj_gen;
        if (jj_2_13(2)) {
          jj_consume_token(UNSIGNED);
          jj_consume_token(CHAR);
        } else if (jj_2_14(2)) {
          jj_consume_token(UNSIGNED);
          jj_consume_token(SHORT);
        } else if (jj_2_15(2)) {
          jj_consume_token(UNSIGNED);
          jj_consume_token(INT);
        } else {
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case UNSIGNED:
            jj_consume_token(UNSIGNED);
            jj_consume_token(LONG);
            break;
          case STRUCT:
            jj_consume_token(STRUCT);
            jj_consume_token(IDENTIFIER);
            break;
          case UNION:
            jj_consume_token(UNION);
            jj_consume_token(IDENTIFIER);
            break;
          default:
            jj_la1[12] = jj_gen;
            if (isType(getToken(1).image)) {
              jj_consume_token(IDENTIFIER);
            } else {
              jj_consume_token(-1);
              throw new ParseException();
            }
          }
        }
      }
    } finally {
      trace_return("typeref_base");
    }
  }

  final public void typedef() throws ParseException {
    trace_call("typedef");
    try {
      jj_consume_token(TYPEDEF);
      typeref();
      jj_consume_token(IDENTIFIER);
      jj_consume_token(47);
    } finally {
      trace_return("typedef");
    }
  }

  final public void stmts() throws ParseException {
    trace_call("stmts");
    try {
      label_10:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case IF:
        case SWITCH:
        case WHILE:
        case DO:
        case FOR:
        case RETURN:
        case BREAK:
        case CONTINUE:
        case GOTO:
        case SIZEOF:
        case IDENTIFIER:
        case INTEGER:
        case CHARACTER:
        case STRING:
        case 47:
        case 48:
        case 53:
        case 57:
        case 80:
        case 83:
        case 84:
        case 87:
        case 88:
        case 89:
        case 90:
          ;
          break;
        default:
          jj_la1[13] = jj_gen;
          break label_10;
        }
        stmt();
      }
    } finally {
      trace_return("stmts");
    }
  }

  final public void stmt() throws ParseException {
    trace_call("stmt");
    try {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 47:
        jj_consume_token(47);
        break;
      default:
        jj_la1[14] = jj_gen;
        if (jj_2_16(2)) {
          labeled_stmt();
        } else {
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case SIZEOF:
          case IDENTIFIER:
          case INTEGER:
          case CHARACTER:
          case STRING:
          case 48:
          case 57:
          case 80:
          case 83:
          case 84:
          case 87:
          case 88:
          case 89:
          case 90:
            expr();
            jj_consume_token(47);
            break;
          case 53:
            block();
            break;
          case IF:
            if_stmt();
            break;
          case WHILE:
            while_stmt();
            break;
          case DO:
            dowhile_stmt();
            break;
          case FOR:
            for_stmt();
            break;
          case SWITCH:
            switch_stmt();
            break;
          case BREAK:
            break_stmt();
            break;
          case CONTINUE:
            continue_stmt();
            break;
          case GOTO:
            goto_stmt();
            break;
          case RETURN:
            return_stmt();
            break;
          default:
            jj_la1[15] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
      }
    } finally {
      trace_return("stmt");
    }
  }

  final public void labeled_stmt() throws ParseException {
    trace_call("labeled_stmt");
    try {
      jj_consume_token(IDENTIFIER);
      jj_consume_token(58);
      stmt();
    } finally {
      trace_return("labeled_stmt");
    }
  }

  final public void if_stmt() throws ParseException {
    trace_call("if_stmt");
    try {
      jj_consume_token(IF);
      jj_consume_token(48);
      expr();
      jj_consume_token(51);
      stmt();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case ELSE:
        jj_consume_token(ELSE);
        stmt();
        break;
      default:
        jj_la1[16] = jj_gen;
        ;
      }
    } finally {
      trace_return("if_stmt");
    }
  }

  final public void while_stmt() throws ParseException {
    trace_call("while_stmt");
    try {
      jj_consume_token(WHILE);
      jj_consume_token(48);
      expr();
      jj_consume_token(51);
      stmt();
    } finally {
      trace_return("while_stmt");
    }
  }

  final public void dowhile_stmt() throws ParseException {
    trace_call("dowhile_stmt");
    try {
      jj_consume_token(DO);
      stmt();
      jj_consume_token(WHILE);
      jj_consume_token(48);
      expr();
      jj_consume_token(51);
      jj_consume_token(47);
    } finally {
      trace_return("dowhile_stmt");
    }
  }

  final public void for_stmt() throws ParseException {
    trace_call("for_stmt");
    try {
      jj_consume_token(FOR);
      jj_consume_token(48);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SIZEOF:
      case IDENTIFIER:
      case INTEGER:
      case CHARACTER:
      case STRING:
      case 48:
      case 57:
      case 80:
      case 83:
      case 84:
      case 87:
      case 88:
      case 89:
      case 90:
        expr();
        break;
      default:
        jj_la1[17] = jj_gen;
        ;
      }
      jj_consume_token(47);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SIZEOF:
      case IDENTIFIER:
      case INTEGER:
      case CHARACTER:
      case STRING:
      case 48:
      case 57:
      case 80:
      case 83:
      case 84:
      case 87:
      case 88:
      case 89:
      case 90:
        expr();
        break;
      default:
        jj_la1[18] = jj_gen;
        ;
      }
      jj_consume_token(47);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SIZEOF:
      case IDENTIFIER:
      case INTEGER:
      case CHARACTER:
      case STRING:
      case 48:
      case 57:
      case 80:
      case 83:
      case 84:
      case 87:
      case 88:
      case 89:
      case 90:
        expr();
        break;
      default:
        jj_la1[19] = jj_gen;
        ;
      }
      jj_consume_token(51);
      stmt();
    } finally {
      trace_return("for_stmt");
    }
  }

  final public void switch_stmt() throws ParseException {
    trace_call("switch_stmt");
    try {
      jj_consume_token(SWITCH);
      jj_consume_token(48);
      expr();
      jj_consume_token(51);
      jj_consume_token(53);
      case_clauses();
      jj_consume_token(54);
    } finally {
      trace_return("switch_stmt");
    }
  }

  final public void case_clauses() throws ParseException {
    trace_call("case_clauses");
    try {
      label_11:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case CASE:
          ;
          break;
        default:
          jj_la1[20] = jj_gen;
          break label_11;
        }
        case_clause();
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case DEFAULT_:
        default_clause();
        break;
      default:
        jj_la1[21] = jj_gen;
        ;
      }
    } finally {
      trace_return("case_clauses");
    }
  }

  final public void default_clause() throws ParseException {
    trace_call("default_clause");
    try {
      jj_consume_token(DEFAULT_);
      jj_consume_token(58);
      case_body();
    } finally {
      trace_return("default_clause");
    }
  }

  final public void case_clause() throws ParseException {
    trace_call("case_clause");
    try {
      cases();
      case_body();
    } finally {
      trace_return("case_clause");
    }
  }

  final public void cases() throws ParseException {
    trace_call("cases");
    try {
      label_12:
      while (true) {
        jj_consume_token(CASE);
        primary();
        jj_consume_token(58);
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case CASE:
          ;
          break;
        default:
          jj_la1[22] = jj_gen;
          break label_12;
        }
      }
    } finally {
      trace_return("cases");
    }
  }

  final public void case_body() throws ParseException {
    trace_call("case_body");
    try {
      label_13:
      while (true) {
        stmt();
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case IF:
        case SWITCH:
        case WHILE:
        case DO:
        case FOR:
        case RETURN:
        case BREAK:
        case CONTINUE:
        case GOTO:
        case SIZEOF:
        case IDENTIFIER:
        case INTEGER:
        case CHARACTER:
        case STRING:
        case 47:
        case 48:
        case 53:
        case 57:
        case 80:
        case 83:
        case 84:
        case 87:
        case 88:
        case 89:
        case 90:
          ;
          break;
        default:
          jj_la1[23] = jj_gen;
          break label_13;
        }
      }
    } finally {
      trace_return("case_body");
    }
  }

  final public void goto_stmt() throws ParseException {
    trace_call("goto_stmt");
    try {
      jj_consume_token(GOTO);
      jj_consume_token(IDENTIFIER);
      jj_consume_token(47);
    } finally {
      trace_return("goto_stmt");
    }
  }

  final public void break_stmt() throws ParseException {
    trace_call("break_stmt");
    try {
      jj_consume_token(BREAK);
      jj_consume_token(47);
    } finally {
      trace_return("break_stmt");
    }
  }

  final public void continue_stmt() throws ParseException {
    trace_call("continue_stmt");
    try {
      jj_consume_token(CONTINUE);
      jj_consume_token(47);
    } finally {
      trace_return("continue_stmt");
    }
  }

  final public void return_stmt() throws ParseException {
    trace_call("return_stmt");
    try {
      if (jj_2_17(2)) {
        jj_consume_token(RETURN);
        jj_consume_token(47);
      } else {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case RETURN:
          jj_consume_token(RETURN);
          expr();
          jj_consume_token(47);
          break;
        default:
          jj_la1[24] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    } finally {
      trace_return("return_stmt");
    }
  }

  final public void expr() throws ParseException {
    trace_call("expr");
    try {
      if (jj_2_18(2147483647)) {
        term();
        jj_consume_token(49);
        expr();
      } else if (jj_2_19(2147483647)) {
        term();
        opassign_op();
        expr();
      } else {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case SIZEOF:
        case IDENTIFIER:
        case INTEGER:
        case CHARACTER:
        case STRING:
        case 48:
        case 57:
        case 80:
        case 83:
        case 84:
        case 87:
        case 88:
        case 89:
        case 90:
          expr10();
          break;
        default:
          jj_la1[25] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    } finally {
      trace_return("expr");
    }
  }

  final public String opassign_op() throws ParseException {
    trace_call("opassign_op");
    try {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 59:
        jj_consume_token(59);
              {if (true) return "+";}
        break;
      case 60:
        jj_consume_token(60);
              {if (true) return "-";}
        break;
      case 61:
        jj_consume_token(61);
              {if (true) return "*";}
        break;
      case 62:
        jj_consume_token(62);
              {if (true) return "/";}
        break;
      case 63:
        jj_consume_token(63);
              {if (true) return "%";}
        break;
      case 64:
        jj_consume_token(64);
              {if (true) return "&";}
        break;
      case 65:
        jj_consume_token(65);
              {if (true) return "|";}
        break;
      case 66:
        jj_consume_token(66);
              {if (true) return "^";}
        break;
      case 67:
        jj_consume_token(67);
              {if (true) return "<<";}
        break;
      case 68:
        jj_consume_token(68);
              {if (true) return ">>";}
        break;
      default:
        jj_la1[26] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    throw new Error("Missing return statement in function");
    } finally {
      trace_return("opassign_op");
    }
  }

  final public void expr10() throws ParseException {
    trace_call("expr10");
    try {
      expr9();
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 69:
        jj_consume_token(69);
        expr();
        jj_consume_token(58);
        expr10();
        break;
      default:
        jj_la1[27] = jj_gen;
        ;
      }
    } finally {
      trace_return("expr10");
    }
  }

  final public void expr9() throws ParseException {
    trace_call("expr9");
    try {
      expr8();
      label_14:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 70:
          ;
          break;
        default:
          jj_la1[28] = jj_gen;
          break label_14;
        }
        jj_consume_token(70);
        expr8();
      }
    } finally {
      trace_return("expr9");
    }
  }

  final public void expr8() throws ParseException {
    trace_call("expr8");
    try {
      expr7();
      label_15:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 71:
          ;
          break;
        default:
          jj_la1[29] = jj_gen;
          break label_15;
        }
        jj_consume_token(71);
        expr7();
      }
    } finally {
      trace_return("expr8");
    }
  }

  final public void expr7() throws ParseException {
    trace_call("expr7");
    try {
      expr6();
      label_16:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
          ;
          break;
        default:
          jj_la1[30] = jj_gen;
          break label_16;
        }
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 72:
          jj_consume_token(72);
          expr6();
          break;
        case 73:
          jj_consume_token(73);
          expr6();
          break;
        case 74:
          jj_consume_token(74);
          expr6();
          break;
        case 75:
          jj_consume_token(75);
          expr6();
          break;
        case 76:
          jj_consume_token(76);
          expr6();
          break;
        case 77:
          jj_consume_token(77);
          expr6();
          break;
        default:
          jj_la1[31] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    } finally {
      trace_return("expr7");
    }
  }

  final public void expr6() throws ParseException {
    trace_call("expr6");
    try {
      expr5();
      label_17:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 78:
          ;
          break;
        default:
          jj_la1[32] = jj_gen;
          break label_17;
        }
        jj_consume_token(78);
        expr5();
      }
    } finally {
      trace_return("expr6");
    }
  }

  final public void expr5() throws ParseException {
    trace_call("expr5");
    try {
      expr4();
      label_18:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 79:
          ;
          break;
        default:
          jj_la1[33] = jj_gen;
          break label_18;
        }
        jj_consume_token(79);
        expr4();
      }
    } finally {
      trace_return("expr5");
    }
  }

  final public void expr4() throws ParseException {
    trace_call("expr4");
    try {
      expr3();
      label_19:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 80:
          ;
          break;
        default:
          jj_la1[34] = jj_gen;
          break label_19;
        }
        jj_consume_token(80);
        expr3();
      }
    } finally {
      trace_return("expr4");
    }
  }

  final public void expr3() throws ParseException {
    trace_call("expr3");
    try {
      expr2();
      label_20:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 81:
        case 82:
          ;
          break;
        default:
          jj_la1[35] = jj_gen;
          break label_20;
        }
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 81:
          jj_consume_token(81);
          expr2();
          break;
        case 82:
          jj_consume_token(82);
          expr2();
          break;
        default:
          jj_la1[36] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    } finally {
      trace_return("expr3");
    }
  }

  final public void expr2() throws ParseException {
    trace_call("expr2");
    try {
      expr1();
      label_21:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 83:
        case 84:
          ;
          break;
        default:
          jj_la1[37] = jj_gen;
          break label_21;
        }
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 83:
          jj_consume_token(83);
          expr1();
          break;
        case 84:
          jj_consume_token(84);
          expr1();
          break;
        default:
          jj_la1[38] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    } finally {
      trace_return("expr2");
    }
  }

  final public void expr1() throws ParseException {
    trace_call("expr1");
    try {
      term();
      label_22:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 57:
        case 85:
        case 86:
          ;
          break;
        default:
          jj_la1[39] = jj_gen;
          break label_22;
        }
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 57:
          jj_consume_token(57);
          term();
          break;
        case 85:
          jj_consume_token(85);
          term();
          break;
        case 86:
          jj_consume_token(86);
          term();
          break;
        default:
          jj_la1[40] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    } finally {
      trace_return("expr1");
    }
  }

  final public void term() throws ParseException {
    trace_call("term");
    try {
      if (jj_2_20(2147483647)) {
        jj_consume_token(48);
        type();
        jj_consume_token(51);
        term();
      } else {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case SIZEOF:
        case IDENTIFIER:
        case INTEGER:
        case CHARACTER:
        case STRING:
        case 48:
        case 57:
        case 80:
        case 83:
        case 84:
        case 87:
        case 88:
        case 89:
        case 90:
          unary();
          break;
        default:
          jj_la1[41] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    } finally {
      trace_return("term");
    }
  }

  final public void unary() throws ParseException {
    trace_call("unary");
    try {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 87:
        jj_consume_token(87);
        unary();
        break;
      case 88:
        jj_consume_token(88);
        unary();
        break;
      case 83:
        jj_consume_token(83);
        term();
        break;
      case 84:
        jj_consume_token(84);
        term();
        break;
      case 89:
        jj_consume_token(89);
        term();
        break;
      case 90:
        jj_consume_token(90);
        term();
        break;
      case 57:
        jj_consume_token(57);
        term();
        break;
      case 80:
        jj_consume_token(80);
        term();
        break;
      default:
        jj_la1[42] = jj_gen;
        if (jj_2_21(3)) {
          jj_consume_token(SIZEOF);
          jj_consume_token(48);
          type();
          jj_consume_token(51);
        } else {
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case SIZEOF:
            jj_consume_token(SIZEOF);
            unary();
            break;
          case IDENTIFIER:
          case INTEGER:
          case CHARACTER:
          case STRING:
          case 48:
            postfix();
            break;
          default:
            jj_la1[43] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
        }
      }
    } finally {
      trace_return("unary");
    }
  }

  final public void postfix() throws ParseException {
    trace_call("postfix");
    try {
      primary();
      label_23:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 46:
        case 48:
        case 55:
        case 87:
        case 88:
        case 91:
          ;
          break;
        default:
          jj_la1[44] = jj_gen;
          break label_23;
        }
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 87:
          jj_consume_token(87);
          break;
        case 88:
          jj_consume_token(88);
          break;
        case 55:
          jj_consume_token(55);
          expr();
          jj_consume_token(56);
          break;
        case 46:
          jj_consume_token(46);
          name();
          break;
        case 91:
          jj_consume_token(91);
          name();
          break;
        case 48:
          jj_consume_token(48);
          args();
          jj_consume_token(51);
          break;
        default:
          jj_la1[45] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    } finally {
      trace_return("postfix");
    }
  }

  final public String name() throws ParseException {
    trace_call("name");
    try {
  Token t;
      t = jj_consume_token(IDENTIFIER);
                    {if (true) return t.image;}
    throw new Error("Missing return statement in function");
    } finally {
      trace_return("name");
    }
  }

  final public void args() throws ParseException {
    trace_call("args");
    try {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case SIZEOF:
      case IDENTIFIER:
      case INTEGER:
      case CHARACTER:
      case STRING:
      case 48:
      case 57:
      case 80:
      case 83:
      case 84:
      case 87:
      case 88:
      case 89:
      case 90:
        expr();
        label_24:
        while (true) {
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case 50:
            ;
            break;
          default:
            jj_la1[46] = jj_gen;
            break label_24;
          }
          jj_consume_token(50);
          expr();
        }
        break;
      default:
        jj_la1[47] = jj_gen;
        ;
      }
    } finally {
      trace_return("args");
    }
  }

  final public void primary() throws ParseException {
    trace_call("primary");
    try {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case INTEGER:
        jj_consume_token(INTEGER);
        break;
      case CHARACTER:
        jj_consume_token(CHARACTER);
        break;
      case STRING:
        jj_consume_token(STRING);
        break;
      case IDENTIFIER:
        jj_consume_token(IDENTIFIER);
        break;
      case 48:
        jj_consume_token(48);
        expr();
        jj_consume_token(51);
        break;
      default:
        jj_la1[48] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    } finally {
      trace_return("primary");
    }
  }

  private boolean jj_2_1(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_2(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_3(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_4(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_5(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_6(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_7(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_8(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_9(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_10(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_11(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_12(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_13(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_14(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_15(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_2_16(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_16(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private boolean jj_2_17(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_17(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private boolean jj_2_18(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_18(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private boolean jj_2_19(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_19(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private boolean jj_2_20(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_20(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private boolean jj_2_21(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_21(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private boolean jj_3R_96() {
    if (jj_scan_token(50)) return true;
    if (jj_3R_89()) return true;
    return false;
  }

  private boolean jj_3R_34() {
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3R_94() {
    if (jj_3R_89()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_96()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_90() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_94()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_6() {
    if (jj_scan_token(50)) return true;
    if (jj_3R_34()) return true;
    return false;
  }

  private boolean jj_3_4() {
    if (jj_scan_token(VOID)) return true;
    if (jj_scan_token(51)) return true;
    return false;
  }

  private boolean jj_3R_33() {
    if (jj_3R_34()) return true;
    return false;
  }

  private boolean jj_3R_48() {
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_88() {
    if (jj_scan_token(48)) return true;
    if (jj_3R_90()) return true;
    if (jj_scan_token(51)) return true;
    return false;
  }

  private boolean jj_3_5() {
    if (jj_3R_33()) return true;
    return false;
  }

  private boolean jj_3R_87() {
    if (jj_scan_token(91)) return true;
    if (jj_3R_48()) return true;
    return false;
  }

  private boolean jj_3R_86() {
    if (jj_scan_token(46)) return true;
    if (jj_3R_48()) return true;
    return false;
  }

  private boolean jj_3R_49() {
    if (jj_scan_token(49)) return true;
    return false;
  }

  private boolean jj_3R_85() {
    if (jj_scan_token(55)) return true;
    if (jj_3R_89()) return true;
    if (jj_scan_token(56)) return true;
    return false;
  }

  private boolean jj_3R_83() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(87)) {
    jj_scanpos = xsp;
    if (jj_scan_token(88)) {
    jj_scanpos = xsp;
    if (jj_3R_85()) {
    jj_scanpos = xsp;
    if (jj_3R_86()) {
    jj_scanpos = xsp;
    if (jj_3R_87()) {
    jj_scanpos = xsp;
    if (jj_3R_88()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_30() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(14)) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_80() {
    if (jj_3R_82()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_83()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_41() {
    if (jj_3R_30()) return true;
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3R_79() {
    if (jj_3R_80()) return true;
    return false;
  }

  private boolean jj_3R_78() {
    if (jj_scan_token(SIZEOF)) return true;
    if (jj_3R_68()) return true;
    return false;
  }

  private boolean jj_3_21() {
    if (jj_scan_token(SIZEOF)) return true;
    if (jj_scan_token(48)) return true;
    if (jj_3R_40()) return true;
    if (jj_scan_token(51)) return true;
    return false;
  }

  private boolean jj_3R_77() {
    if (jj_scan_token(80)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_76() {
    if (jj_scan_token(57)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_75() {
    if (jj_scan_token(90)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_42() {
    if (jj_scan_token(CONST)) return true;
    return false;
  }

  private boolean jj_3R_74() {
    if (jj_scan_token(89)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_73() {
    if (jj_scan_token(84)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_72() {
    if (jj_scan_token(83)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_71() {
    if (jj_scan_token(88)) return true;
    if (jj_3R_68()) return true;
    return false;
  }

  private boolean jj_3R_50() {
    if (jj_scan_token(50)) return true;
    return false;
  }

  private boolean jj_3R_68() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_70()) {
    jj_scanpos = xsp;
    if (jj_3R_71()) {
    jj_scanpos = xsp;
    if (jj_3R_72()) {
    jj_scanpos = xsp;
    if (jj_3R_73()) {
    jj_scanpos = xsp;
    if (jj_3R_74()) {
    jj_scanpos = xsp;
    if (jj_3R_75()) {
    jj_scanpos = xsp;
    if (jj_3R_76()) {
    jj_scanpos = xsp;
    if (jj_3R_77()) {
    jj_scanpos = xsp;
    if (jj_3_21()) {
    jj_scanpos = xsp;
    if (jj_3R_78()) {
    jj_scanpos = xsp;
    if (jj_3R_79()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_70() {
    if (jj_scan_token(87)) return true;
    if (jj_3R_68()) return true;
    return false;
  }

  private boolean jj_3_20() {
    if (jj_scan_token(48)) return true;
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3R_32() {
    if (jj_3R_30()) return true;
    if (jj_3R_40()) return true;
    if (jj_3R_48()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_49()) jj_scanpos = xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_50()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(47)) return true;
    return false;
  }

  private boolean jj_3_2() {
    if (jj_3R_30()) return true;
    if (jj_3R_31()) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(48)) return true;
    return false;
  }

  private boolean jj_3R_52() {
    if (jj_3R_68()) return true;
    return false;
  }

  private boolean jj_3R_29() {
    if (jj_3R_45()) return true;
    return false;
  }

  private boolean jj_3R_128() {
    if (jj_scan_token(86)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_28() {
    if (jj_3R_44()) return true;
    return false;
  }

  private boolean jj_3R_127() {
    if (jj_scan_token(85)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_27() {
    if (jj_3R_43()) return true;
    return false;
  }

  private boolean jj_3R_126() {
    if (jj_scan_token(57)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3R_123() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_126()) {
    jj_scanpos = xsp;
    if (jj_3R_127()) {
    jj_scanpos = xsp;
    if (jj_3R_128()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_26() {
    if (jj_3R_42()) return true;
    return false;
  }

  private boolean jj_3R_38() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_51()) {
    jj_scanpos = xsp;
    if (jj_3R_52()) return true;
    }
    return false;
  }

  private boolean jj_3R_51() {
    if (jj_scan_token(48)) return true;
    if (jj_3R_40()) return true;
    if (jj_scan_token(51)) return true;
    if (jj_3R_38()) return true;
    return false;
  }

  private boolean jj_3_3() {
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3R_25() {
    if (jj_3R_41()) return true;
    return false;
  }

  private boolean jj_3_1() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_25()) {
    jj_scanpos = xsp;
    if (jj_3_3()) {
    jj_scanpos = xsp;
    if (jj_3R_26()) {
    jj_scanpos = xsp;
    if (jj_3R_27()) {
    jj_scanpos = xsp;
    if (jj_3R_28()) {
    jj_scanpos = xsp;
    if (jj_3R_29()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_37() {
    if (jj_scan_token(IDENTIFIER)) return true;
    if (jj_scan_token(58)) return true;
    return false;
  }

  private boolean jj_3R_125() {
    if (jj_scan_token(84)) return true;
    if (jj_3R_119()) return true;
    return false;
  }

  private boolean jj_3R_124() {
    if (jj_scan_token(83)) return true;
    if (jj_3R_119()) return true;
    return false;
  }

  private boolean jj_3R_120() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_124()) {
    jj_scanpos = xsp;
    if (jj_3R_125()) return true;
    }
    return false;
  }

  private boolean jj_3R_119() {
    if (jj_3R_38()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_123()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_122() {
    if (jj_scan_token(82)) return true;
    if (jj_3R_117()) return true;
    return false;
  }

  private boolean jj_3R_121() {
    if (jj_scan_token(81)) return true;
    if (jj_3R_117()) return true;
    return false;
  }

  private boolean jj_3R_118() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_121()) {
    jj_scanpos = xsp;
    if (jj_3R_122()) return true;
    }
    return false;
  }

  private boolean jj_3_16() {
    if (jj_3R_37()) return true;
    return false;
  }

  private boolean jj_3R_117() {
    if (jj_3R_119()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_120()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_116() {
    if (jj_scan_token(80)) return true;
    if (jj_3R_115()) return true;
    return false;
  }

  private boolean jj_3R_115() {
    if (jj_3R_117()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_118()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_114() {
    if (jj_scan_token(79)) return true;
    if (jj_3R_113()) return true;
    return false;
  }

  private boolean jj_3R_113() {
    if (jj_3R_115()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_116()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_106() {
    if (jj_scan_token(78)) return true;
    if (jj_3R_105()) return true;
    return false;
  }

  private boolean jj_3R_112() {
    if (jj_scan_token(77)) return true;
    if (jj_3R_103()) return true;
    return false;
  }

  private boolean jj_3R_105() {
    if (jj_3R_113()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_114()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_45() {
    if (jj_scan_token(TYPEDEF)) return true;
    return false;
  }

  private boolean jj_3R_111() {
    if (jj_scan_token(76)) return true;
    if (jj_3R_103()) return true;
    return false;
  }

  private boolean jj_3R_110() {
    if (jj_scan_token(75)) return true;
    if (jj_3R_103()) return true;
    return false;
  }

  private boolean jj_3R_109() {
    if (jj_scan_token(74)) return true;
    if (jj_3R_103()) return true;
    return false;
  }

  private boolean jj_3R_108() {
    if (jj_scan_token(73)) return true;
    if (jj_3R_103()) return true;
    return false;
  }

  private boolean jj_3R_107() {
    if (jj_scan_token(72)) return true;
    if (jj_3R_103()) return true;
    return false;
  }

  private boolean jj_3R_104() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_107()) {
    jj_scanpos = xsp;
    if (jj_3R_108()) {
    jj_scanpos = xsp;
    if (jj_3R_109()) {
    jj_scanpos = xsp;
    if (jj_3R_110()) {
    jj_scanpos = xsp;
    if (jj_3R_111()) {
    jj_scanpos = xsp;
    if (jj_3R_112()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_65() {
    if (jj_scan_token(UNION)) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_103() {
    if (jj_3R_105()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_106()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_64() {
    if (jj_scan_token(STRUCT)) return true;
    if (jj_scan_token(IDENTIFIER)) return true;
    return false;
  }

  private boolean jj_3R_63() {
    if (jj_scan_token(UNSIGNED)) return true;
    if (jj_scan_token(LONG)) return true;
    return false;
  }

  private boolean jj_3_15() {
    if (jj_scan_token(UNSIGNED)) return true;
    if (jj_scan_token(INT)) return true;
    return false;
  }

  private boolean jj_3_14() {
    if (jj_scan_token(UNSIGNED)) return true;
    if (jj_scan_token(SHORT)) return true;
    return false;
  }

  private boolean jj_3_13() {
    if (jj_scan_token(UNSIGNED)) return true;
    if (jj_scan_token(CHAR)) return true;
    return false;
  }

  private boolean jj_3R_102() {
    if (jj_scan_token(71)) return true;
    if (jj_3R_101()) return true;
    return false;
  }

  private boolean jj_3R_46() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(6)) {
    jj_scanpos = xsp;
    if (jj_scan_token(7)) {
    jj_scanpos = xsp;
    if (jj_scan_token(8)) {
    jj_scanpos = xsp;
    if (jj_scan_token(9)) {
    jj_scanpos = xsp;
    if (jj_scan_token(10)) {
    jj_scanpos = xsp;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) {
    jj_scanpos = xsp;
    if (jj_3_15()) {
    jj_scanpos = xsp;
    if (jj_3R_63()) {
    jj_scanpos = xsp;
    if (jj_3R_64()) {
    jj_scanpos = xsp;
    if (jj_3R_65()) {
    jj_scanpos = xsp;
    jj_lookingAhead = true;
    jj_semLA = isType(getToken(1).image);
    jj_lookingAhead = false;
    if (!jj_semLA || jj_scan_token(34)) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_101() {
    if (jj_3R_103()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_104()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_100() {
    if (jj_scan_token(70)) return true;
    if (jj_3R_99()) return true;
    return false;
  }

  private boolean jj_3_12() {
    if (jj_scan_token(50)) return true;
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3R_99() {
    if (jj_3R_101()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_102()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_10() {
    if (jj_scan_token(VOID)) return true;
    if (jj_scan_token(51)) return true;
    return false;
  }

  private boolean jj_3R_36() {
    if (jj_3R_31()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_12()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_81() {
    if (jj_scan_token(50)) return true;
    if (jj_scan_token(52)) return true;
    return false;
  }

  private boolean jj_3R_98() {
    if (jj_scan_token(69)) return true;
    if (jj_3R_89()) return true;
    if (jj_scan_token(58)) return true;
    if (jj_3R_95()) return true;
    return false;
  }

  private boolean jj_3R_97() {
    if (jj_3R_99()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_100()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_11() {
    if (jj_3R_36()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_81()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_69() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(6)) {
    jj_scanpos = xsp;
    if (jj_3_11()) return true;
    }
    return false;
  }

  private boolean jj_3R_67() {
    if (jj_scan_token(48)) return true;
    if (jj_3R_69()) return true;
    if (jj_scan_token(51)) return true;
    return false;
  }

  private boolean jj_3R_95() {
    if (jj_3R_97()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_98()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_66() {
    if (jj_scan_token(55)) return true;
    if (jj_scan_token(INTEGER)) return true;
    if (jj_scan_token(56)) return true;
    return false;
  }

  private boolean jj_3_9() {
    if (jj_scan_token(55)) return true;
    if (jj_scan_token(56)) return true;
    return false;
  }

  private boolean jj_3R_47() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_9()) {
    jj_scanpos = xsp;
    if (jj_3R_66()) {
    jj_scanpos = xsp;
    if (jj_scan_token(57)) {
    jj_scanpos = xsp;
    if (jj_3R_67()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3R_62() {
    if (jj_scan_token(68)) return true;
    return false;
  }

  private boolean jj_3R_61() {
    if (jj_scan_token(67)) return true;
    return false;
  }

  private boolean jj_3R_60() {
    if (jj_scan_token(66)) return true;
    return false;
  }

  private boolean jj_3R_59() {
    if (jj_scan_token(65)) return true;
    return false;
  }

  private boolean jj_3R_58() {
    if (jj_scan_token(64)) return true;
    return false;
  }

  private boolean jj_3R_31() {
    if (jj_3R_46()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_47()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_57() {
    if (jj_scan_token(63)) return true;
    return false;
  }

  private boolean jj_3_19() {
    if (jj_3R_38()) return true;
    if (jj_3R_39()) return true;
    return false;
  }

  private boolean jj_3R_56() {
    if (jj_scan_token(62)) return true;
    return false;
  }

  private boolean jj_3R_55() {
    if (jj_scan_token(61)) return true;
    return false;
  }

  private boolean jj_3R_54() {
    if (jj_scan_token(60)) return true;
    return false;
  }

  private boolean jj_3R_53() {
    if (jj_scan_token(59)) return true;
    return false;
  }

  private boolean jj_3_18() {
    if (jj_3R_38()) return true;
    if (jj_scan_token(49)) return true;
    return false;
  }

  private boolean jj_3R_40() {
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3R_39() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_53()) {
    jj_scanpos = xsp;
    if (jj_3R_54()) {
    jj_scanpos = xsp;
    if (jj_3R_55()) {
    jj_scanpos = xsp;
    if (jj_3R_56()) {
    jj_scanpos = xsp;
    if (jj_3R_57()) {
    jj_scanpos = xsp;
    if (jj_3R_58()) {
    jj_scanpos = xsp;
    if (jj_3R_59()) {
    jj_scanpos = xsp;
    if (jj_3R_60()) {
    jj_scanpos = xsp;
    if (jj_3R_61()) {
    jj_scanpos = xsp;
    if (jj_3R_62()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_93() {
    if (jj_3R_95()) return true;
    return false;
  }

  private boolean jj_3R_92() {
    if (jj_3R_38()) return true;
    if (jj_3R_39()) return true;
    if (jj_3R_89()) return true;
    return false;
  }

  private boolean jj_3R_91() {
    if (jj_3R_38()) return true;
    if (jj_scan_token(49)) return true;
    if (jj_3R_89()) return true;
    return false;
  }

  private boolean jj_3R_89() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_91()) {
    jj_scanpos = xsp;
    if (jj_3R_92()) {
    jj_scanpos = xsp;
    if (jj_3R_93()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_17() {
    if (jj_scan_token(RETURN)) return true;
    if (jj_scan_token(47)) return true;
    return false;
  }

  private boolean jj_3R_35() {
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3_8() {
    if (jj_3R_35()) return true;
    return false;
  }

  private boolean jj_3R_44() {
    if (jj_scan_token(UNION)) return true;
    return false;
  }

  private boolean jj_3R_43() {
    if (jj_scan_token(STRUCT)) return true;
    return false;
  }

  private boolean jj_3_7() {
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3R_84() {
    if (jj_scan_token(48)) return true;
    if (jj_3R_89()) return true;
    if (jj_scan_token(51)) return true;
    return false;
  }

  private boolean jj_3R_82() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(35)) {
    jj_scanpos = xsp;
    if (jj_scan_token(40)) {
    jj_scanpos = xsp;
    if (jj_scan_token(45)) {
    jj_scanpos = xsp;
    if (jj_scan_token(34)) {
    jj_scanpos = xsp;
    if (jj_3R_84()) return true;
    }
    }
    }
    }
    return false;
  }

  /** Generated Token Manager. */
  public ParserTokenManager token_source;
  SimpleCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  /** Whether we are looking ahead. */
  private boolean jj_lookingAhead = false;
  private boolean jj_semLA;
  private int jj_gen;
  final private int[] jj_la1 = new int[49];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
      jj_la1_init_2();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {0x0,0x0,0x80011800,0x0,0x0,0x0,0x4000,0x0,0x0,0x0,0x0,0x7c0,0x41800,0x7f280000,0x0,0x7f280000,0x100000,0x0,0x0,0x0,0x400000,0x800000,0x400000,0x7f280000,0x8000000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {0x1,0x4000,0x0,0x20000,0x40000,0x20000,0x0,0x40000,0x2810000,0x2810000,0x40000,0x0,0x0,0x221a10e,0x8000,0x221210e,0x0,0x201210e,0x201210e,0x201210e,0x0,0x0,0x0,0x221a10e,0x0,0x201210e,0xf8000000,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2000000,0x2000000,0x201210e,0x2000000,0x1210e,0x814000,0x814000,0x40000,0x201210e,0x1210c,};
   }
   private static void jj_la1_init_2() {
      jj_la1_2 = new int[] {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7990000,0x0,0x7990000,0x0,0x7990000,0x7990000,0x7990000,0x0,0x0,0x0,0x7990000,0x0,0x7990000,0x1f,0x20,0x40,0x80,0x3f00,0x3f00,0x4000,0x8000,0x10000,0x60000,0x60000,0x180000,0x180000,0x600000,0x600000,0x7990000,0x7990000,0x0,0x9800000,0x9800000,0x0,0x7990000,0x0,};
   }
  final private JJCalls[] jj_2_rtns = new JJCalls[21];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public Parser(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public Parser(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new ParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 49; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 49; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public Parser(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new ParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 49; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 49; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public Parser(ParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 49; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(ParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 49; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      trace_token(token, "");
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  static private final class LookaheadSuccess extends java.lang.Error { }
  final private LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
      trace_token(token, " (in getNextToken)");
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = jj_lookingAhead ? jj_scanpos : token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List jj_expentries = new java.util.ArrayList();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new int[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      boolean exists = false;
      for (java.util.Iterator it = jj_expentries.iterator(); it.hasNext();) {
        int[] oldentry = (int[])(it.next());
        if (oldentry.length == jj_expentry.length) {
          exists = true;
          for (int i = 0; i < jj_expentry.length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              exists = false;
              break;
            }
          }
          if (exists) break;
        }
      }
      if (!exists) jj_expentries.add(jj_expentry);
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[92];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 49; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 92; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = (int[])jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  private int trace_indent = 0;
  private boolean trace_enabled = true;

/** Enable tracing. */
  final public void enable_tracing() {
    trace_enabled = true;
  }

/** Disable tracing. */
  final public void disable_tracing() {
    trace_enabled = false;
  }

  private void trace_call(String s) {
    if (trace_enabled) {
      for (int i = 0; i < trace_indent; i++) { System.out.print(" "); }
      System.out.println("Call:   " + s);
    }
    trace_indent = trace_indent + 2;
  }

  private void trace_return(String s) {
    trace_indent = trace_indent - 2;
    if (trace_enabled) {
      for (int i = 0; i < trace_indent; i++) { System.out.print(" "); }
      System.out.println("Return: " + s);
    }
  }

  private void trace_token(Token t, String where) {
    if (trace_enabled) {
      for (int i = 0; i < trace_indent; i++) { System.out.print(" "); }
      System.out.print("Consumed token: <" + tokenImage[t.kind]);
      if (t.kind != 0 && !tokenImage[t.kind].equals("\"" + t.image + "\"")) {
        System.out.print(": \"" + t.image + "\"");
      }
      System.out.println(" at line " + t.beginLine + " column " + t.beginColumn + ">" + where);
    }
  }

  private void trace_scan(Token t1, int t2) {
    if (trace_enabled) {
      for (int i = 0; i < trace_indent; i++) { System.out.print(" "); }
      System.out.print("Visited token: <" + tokenImage[t1.kind]);
      if (t1.kind != 0 && !tokenImage[t1.kind].equals("\"" + t1.image + "\"")) {
        System.out.print(": \"" + t1.image + "\"");
      }
      System.out.println(" at line " + t1.beginLine + " column " + t1.beginColumn + ">; Expected token: <" + tokenImage[t2] + ">");
    }
  }

  private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 21; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
            case 1: jj_3_2(); break;
            case 2: jj_3_3(); break;
            case 3: jj_3_4(); break;
            case 4: jj_3_5(); break;
            case 5: jj_3_6(); break;
            case 6: jj_3_7(); break;
            case 7: jj_3_8(); break;
            case 8: jj_3_9(); break;
            case 9: jj_3_10(); break;
            case 10: jj_3_11(); break;
            case 11: jj_3_12(); break;
            case 12: jj_3_13(); break;
            case 13: jj_3_14(); break;
            case 14: jj_3_15(); break;
            case 15: jj_3_16(); break;
            case 16: jj_3_17(); break;
            case 17: jj_3_18(); break;
            case 18: jj_3_19(); break;
            case 19: jj_3_20(); break;
            case 20: jj_3_21(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  static final class JJCalls {
    int gen;
    Token first;
    int arg;
    JJCalls next;
  }

}
